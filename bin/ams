#!/usr/bin/env ruby
THIS_FILE = File.symlink?(__FILE__) ? File.readlink(__FILE__) : __FILE__
lib = File.expand_path('../../lib', THIS_FILE)
plugins= File.expand_path('../../lib/AnalyzeMySQL/plugins', THIS_FILE)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)
$LOAD_PATH.unshift(plugins) unless $LOAD_PATH.include?(plugins)

require 'AnalyzeMySQL'
require 'optparse'
require 'fileutils'
require 'colorize'
puts $LOAD_PATH
options = {
    :config => File.expand_path('conf/config.yml', Dir.getwd)
}

OptionParser.new do |opts|
  opts.banner = "Usage: #{__FILE__} [options]"
  opts.on('-i', '--init', 'Creates a new config.yml from an example file.') do |i|
    conf_file = File.expand_path('../../conf/config.yml', THIS_FILE)

    puts 'Creating config folder'.green
    Dir.mkdir(File.expand_path(Dir.getwd, 'conf')) unless Dir.exists? File.absolute_path(Dir.getwd, 'conf')

    puts 'Copying sample config to current working directory...'.green
    FileUtils.cp(conf_file, File.expand_path(Dir.getwd, 'conf')) unless File.exists? File.expand_path(Dir.getwd, 'conf/config.yml')
  end

  opts.on_tail('--version', 'Show version') do
    puts AnalyzeMySQL::VERSION
    exit
  end
end.parse!

conf = AnalyzeMySQL::conf(options)
AnalyzeMySQL::run(conf)